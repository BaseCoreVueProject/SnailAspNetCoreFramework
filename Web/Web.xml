<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Web</name>
    </assembly>
    <members>
        <member name="T:Web.AutoFacModule.OtherModule">
            <summary>
            非service的其它类的注册
            </summary>
        </member>
        <member name="T:Web.AutoMapperProfiles.DefaultProfile">
            <summary>
            默认的automapper配置，只配置entity和dto的相互映射，其它的请用AutoMapAttribute设置
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.AppDbContextTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.AppDbContextTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.AppDbContextTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.AppDbContextTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.AppDbContextTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.AppDbContextTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.AppDbContextTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.AppDbContextTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.AppDbContextTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.AppDbContextTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.AppDbContextTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.CodeGenerateConfig">
            <summary>
            代码生成的配置文件，结构dto
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EntityConfigModel">
            <summary>
            配置里的entity节点
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityFieldModel.Name">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityFieldModel.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityFieldModel.Comment">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityFieldModel.Attributes">
            <summary>
            特性
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueFieldModel.Name">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueFieldModel.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueFieldModel.Comment">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueFieldModel.KeyValues">
            <summary>
            当type为select时，keyValues值
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumFieldModel.Name">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumFieldModel.Comment">
            <summary>
            描述
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.CodeGeneraterHelper.GenerateEntitiesModelFromTableModels(Web.CodeGenerater.CodeGenerateConfig,System.Collections.Generic.List{System.String}@)">
            <summary>
            从json配置里的entity配置节点，生成template.tt使用的model
            </summary>
            <param name="tableModels"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="T:Web.CodeGenerater.ControllerTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.DtoTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EntityConfigTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EntityTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.ServiceTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.VueTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.VueApiTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.VueRouterTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EnumTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EnumJsTemplate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.ControllerTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ControllerTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ControllerTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ControllerTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ControllerTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ControllerTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.ControllerTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ControllerTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ControllerTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ControllerTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.DtoTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.DtoTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.DtoTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.DtoTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.DtoTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.DtoTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.DtoTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.DtoTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.DtoTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.DtoTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EntityConfigTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityConfigTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityConfigTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityConfigTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityConfigTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityConfigTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EntityConfigTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityConfigTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityConfigTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityConfigTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EntityTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EntityTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EntityTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EntityTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EnumJsTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumJsTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumJsTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumJsTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumJsTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumJsTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EnumJsTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumJsTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumJsTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumJsTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EnumTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.EnumTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.EnumTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.EnumTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.ServiceTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ServiceTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ServiceTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ServiceTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ServiceTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ServiceTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.ServiceTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ServiceTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.ServiceTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.ServiceTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.VueApiTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueApiTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueApiTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueApiTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueApiTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueApiTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.VueApiTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueApiTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueApiTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueApiTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.VueRouterTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueRouterTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueRouterTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueRouterTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueRouterTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueRouterTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.VueRouterTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueRouterTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueRouterTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueRouterTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.VueTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Web.CodeGenerater.VueTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Web.CodeGenerater.VueTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Web.CodeGenerater.VueTemplateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Web.ConfigureServicesExtenssions.ConfigOptionsExtenssion">
            <summary>
            配置options
            </summary>
        </member>
        <member name="M:Web.Controllers.CommonUseController.ExportExcel">
            <summary>
            文件下载
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Controllers.CommonUseController.ImportExcel(Microsoft.AspNetCore.Http.IFormFileCollection)">
            <summary>
            文件上传，form-data里的key必须为formFiles才能正确绑定文件到对象
            </summary>
            <param name="formFiles"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Controllers.ControllerContext">
            <summary>
            controller公共上下文，用于定义controller类的公共方法，属性等
            </summary>
        </member>
        <member name="T:Web.Controllers.CRUDController`5">
            <summary>
            通用CRUD接口
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TSaveDto"></typeparam>
            <typeparam name="TQueryDto"></typeparam>
        </member>
        <member name="T:Web.Controllers.DefaultBaseController">
            <summary>
            所有contoller继承此类
            </summary>
            <remarks>
            如果没有AuthorizeAttribute，HttpContext.User不会有用户
            </remarks>
        </member>
        <member name="P:Web.Controllers.FileController._fileProvider">
            <summary>
            文件提供程序 
            </summary>
        </member>
        <member name="M:Web.Controllers.FileController.UploadFile(Microsoft.AspNetCore.Http.IFormCollection)">
            <summary>
            上传单个或多个文件，上传的参数有：文件、数据ID
            </summary>
            <param name="formCollection">包含dataId,文件附件</param>
            <returns>返回一个或多个文件的附件对象</returns>
        </member>
        <member name="M:Web.Controllers.FileController.GetFileInfos(System.String,System.String)">
            <summary>
            根据数据ID，获取此数据的附件文件的基本信息
            </summary>
            <param name="dataId">数据id</param>
            <returns>此数据的附件文件的基本信息列表</returns>
        </member>
        <member name="M:Web.Controllers.FileController.GetFile(System.String)">
            <summary>
            根据ID，下载文件
            </summary>
            <param name="id">id，为accessory的id</param>
            <returns></returns>
        </member>
        <member name="M:Web.Controllers.FileController.DeleteFiles(System.Collections.Generic.List{System.String})">
            <summary>
            删除文件
            </summary>
            <param name="ids">要删除的文件的id,为accessory的id</param>
            <returns></returns>
        </member>
        <member name="M:Web.Controllers.FileController.Upload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传文件到本地静态文件目录
            </summary>
            <param name="formFile">上传文件</param>
            <returns>文件上传后的服务器访问相对路径</returns>
            <remarks>
            用IFormFile接受
            </remarks>
        </member>
        <member name="M:Web.Controllers.KeyValueController.Get(System.String)">
            <summary>
            获取枚举和配置的key-value
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Controllers.ManagerController">
            <summary>
            示例表接口
            </summary>
        </member>
        <member name="M:Web.Controllers.ManagerController.RefreashAllEntityCache">
            <summary>
            刷新所有实体缓存
            </summary>
        </member>
        <member name="M:Web.Controllers.ManagerController.RefreashAllPermissionCache">
            <summary>
            刷新所有实体缓存
            </summary>
        </member>
        <member name="M:Web.Controllers.PermissionController.Login(Snail.Core.Permission.LoginDto)">
            <summary>
            获取token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Controllers.PermissionController.GetAllResourceRoles">
            <summary>
            获取所有的资源以及资源角色的对应关系信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Controllers.PermissionController.InitResource">
            <summary>
            初始化权限资源
            </summary>
        </member>
        <member name="T:Web.Controllers.TestController">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:Web.Controllers.TestController.GetCurrentUserId">
            <summary>
            获取当前登录人
            </summary>
            <returns>返回登录人的id</returns>
        </member>
        <member name="M:Web.Controllers.TestController.SyncReturn(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:Web.DTO.Config.ConfigTreeResultDto.Children">
            <summary>
            子资源
            </summary>
        </member>
        <member name="P:Web.DTO.Config.ConfigTreeResultDto.HasChildren">
            <summary>
            是否有子元素
            </summary>
        </member>
        <member name="T:Web.DTO.KeyQueryDto">
            <summary>
             todo:IPagenation默认实现
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceResultDto.Code">
            <summary>
            资源键，如接口名，菜单名，唯一键
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceResultDto.Name">
            <summary>
            资源描述，如接口的名称、菜单的名称
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceResultDto.ParentId">
            <summary>
            父资源id
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceSaveDto.Code">
            <summary>
            资源键，如接口名，菜单名，唯一键
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceSaveDto.Name">
            <summary>
            资源描述，如接口的名称、菜单的名称
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceSaveDto.ParentId">
            <summary>
            父资源id
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceTreeResultDto.Code">
            <summary>
            资源键，如接口名，菜单名，唯一键
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceTreeResultDto.Name">
            <summary>
            资源描述，如接口的名称、菜单的名称
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceTreeResultDto.ParentId">
            <summary>
            父资源id
            </summary>
        </member>
        <member name="P:Web.DTO.Resource.ResourceTreeResultDto.Children">
            <summary>
            子资源
            </summary>
        </member>
        <member name="T:Web.Filter.CacheFilterAttribute">
            <summary>
            缓存过滤器
            </summary>
            <remarks>
            * 经验证，如果在action或是controller上加CacheFilter特性后，CacheFilterAttribute的生命周期是每个action/controller为一个单例。（即有程序里有多少个CacheFilter特性，就会有多少个实例）
            </remarks>
        </member>
        <member name="T:Web.Filter.GlobalResultFilterAttribute">
            <summary>
            只有没有进入到ExceptFilter里的才会进入此过滤器
            </summary>
        </member>
        <member name="M:Web.Permission.BasePermissionStore`6.ReloadPemissionDatas">
            <summary>
            
            </summary>
            <remarks>
            经验证，cache里的值在remove后，之前已经从cache里获取的值不会删除
            </remarks>
        </member>
        <member name="M:Web.Permission.BasePermissionStore`6.SaveResource(Snail.Core.Permission.IResource)">
            <summary>
            保存资源。会从资源id和资源code两字段考虑是新增还是修改
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:Web.Permission.DefaultPermissionStore.SaveResource(Snail.Core.Permission.IResource)">
            <summary>
            保存资源。会从资源id和资源code两字段考虑是新增还是修改
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:Web.Permission.PermissionServiceCollectionExtensions.AddPermission(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Snail.Core.Permission.PermissionOptions})">
            <summary>
            权限控制核心，即必须的配置
            </summary>
            <param name="services"></param>
            <param name="action"></param>
        </member>
        <member name="T:Web.Permission.UserInfo">
            <summary>
            用户信息，用于给前端的数据
            </summary>
        </member>
        <member name="M:Web.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
            <remarks>
            * autofac对.net core 3.1的集成和2.2是有区别的，用本项目里的autofac配置方法，参考https://autofaccn.readthedocs.io/zh/latest/integration/aspnetcore.html#asp-net-core-3-0-and-generic-hosting
            
            </remarks>
        </member>
        <member name="T:Web.RunWhenServerStartService">
            <summary>
            服务启动后，会运行
            </summary>
        </member>
        <member name="M:Web.RunWhenServerStartService.Invoke">
            <summary>
            启动后执行的入口
            </summary>
        </member>
        <member name="T:Web.SnailCapConsumerServiceSelector">
            <summary>
            由于CAP默认的ConsumerServiceSelector不能和autofac进行很好的兼容，这里重新实现。用法
            </summary>
            <remarks>
            除方法FindConsumersFromInterfaceTypes，其它方法和ConsumerServiceSelector里的是一样的
            </remarks>
        </member>
        <member name="F:Web.SnailCapConsumerServiceSelector._asteriskList">
            <summary>
            since this class be designed as a Singleton service,the following two list must be thread safe!
            </summary>
        </member>
        <member name="M:Web.SnailCapConsumerServiceSelector.#ctor(System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:DotNetCore.CAP.Internal.ConsumerServiceSelector" />.
            </summary>
        </member>
        <member name="M:Web.SnailCapConsumerServiceSelector.FindConsumersFromInterfaceTypes(System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <returns></returns>
            <remarks>
            此方法是获取所有事件的名和事件对应的处理方法的描述信息，和cap的默认实现不一样
            </remarks>
        </member>
        <member name="M:Web.SnailCapConsumerServiceSelector.FindConsumersFromControllerTypes">
            <summary>
            所有的controller类，不需要实现ICapSubscribe接口，只要有CapSubscribeAttribute就行，非controller类要实现ICapSubscribe接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            * 这个方法用于依赖注入，会由系统自动调用，并在ConfigureContainer方法前调用
            * 约定，由于用了autofac，所有的依赖注入优先用autofac（即在ConfigureContainer里进行注册），这个方法里只注册非自己写的服务，如授权，MVC，signalr等，自己写的service类，统一用autofac注册
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Web.Startup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            * 用autofac进行注册
            * 此方法在ConfigureServices后被调用，并会覆盖之前已经注册的服务
            * 此方法不要build contrainer，autofac会自动build
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:SnaiWeb.Permission.DefaultPermission">
            <summary>
            权限的默认实现类
            </summary>
        </member>
        <member name="M:SnaiWeb.Permission.DefaultPermission.GetRequestResourceCode(System.Object)">
            <summary>
            获取资源对象的code,已经适配如下类型:AuthorizationFilterContext,ControllerActionDescriptor,methodInfo
            默认为className_methodName，或是resourceAttribute里设置的code
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SnaiWeb.Permission.DefaultPermission.InitResource">
            <summary>
            初始化所有的权限资源。
            所有有定义ResourceAttribute的方法都为权限资源，否则不是。要使方法受权限控制，必须做到如下两点：1、在方法上加ResourceAttribute，2、在controller或是action上加Authorize
            </summary>
        </member>
        <member name="M:SnaiWeb.Permission.DefaultPermission.GetResourceCode(System.Reflection.MethodInfo)">
            <summary>
            通过类名和方法名，获取
            </summary>
            <param name="className"></param>
            <param name="methodName"></param>
            <returns></returns>
        </member>
    </members>
</doc>
