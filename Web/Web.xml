<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Web</name>
    </assembly>
    <members>
        <member name="T:Web.AutoFacModule.OtherModule">
            <summary>
            非service的其它类的注册
            </summary>
        </member>
        <member name="M:Web.AutoFacModule.OtherModule.Load(Autofac.ContainerBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:Web.AutoFacModule.ServiceModule">
            <summary>
            
            </summary>
        </member>
        <member name="T:Web.AutoMapperProfiles.DefaultProfile">
            <summary>
            默认的automapper配置，只配置entity和dto的相互映射，其它的请用AutoMapAttribute设置
            </summary>
        </member>
        <member name="M:Web.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
            <remarks>
            * autofac对.net core 3.1的集成和2.2是有区别的，用本项目里的autofac配置方法，参考https://autofaccn.readthedocs.io/zh/latest/integration/aspnetcore.html#asp-net-core-3-0-and-generic-hosting
            
            </remarks>
        </member>
        <member name="T:Web.RunWhenServerStartService">
            <summary>
            服务启动后，会运行
            </summary>
        </member>
        <member name="M:Web.RunWhenServerStartService.Invoke">
            <summary>
            启动后执行的入口
            </summary>
        </member>
        <member name="M:Web.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            * 这个方法用于依赖注入，会由系统自动调用，并在ConfigureContainer方法前调用
            * 约定，由于用了autofac，所有的依赖注入优先用autofac（即在ConfigureContainer里进行注册），这个方法里只注册非自己写的服务，如授权，MVC，signalr等，自己写的service类，统一用autofac注册
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Web.Startup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            * 用autofac进行注册
            * 此方法在ConfigureServices后被调用，并会覆盖之前已经注册的服务
            * 此方法不要build contrainer，autofac会自动build
            </summary>
            <param name="builder"></param>
        </member>
    </members>
</doc>
